import { IBeneficiaryToCreate } from '../src/repository/beneficiaries/beneficiaries.types';
import { IRowWithoutError } from '../src/types/types';

export const beneficiariesToCreateMock = [
  {
    id: 'db41c270-3b9b-4d3d-9af4-7316dbde54ad',
    companyId: 123,
    healthPlanCardId: 'abc123',
    holderHealthPlanCardId: 'def456',
    beneficiaryTypeId: 1,
    name: 'Jo達o',
    cpf: '123.456.789-00',
    birthDate: new Date('1990-01-01'),
    healthPlanId: 456,
    statusId: 1,
    gender: 'M',
    holderCpf: '987.654.321-00',
    createdAt: new Date('2023-06-22T14:15:38.359Z'),
  },
  {
    id: 'e8a5c9de-7e42-44a0-9dd0-549d9d03361f',
    companyId: 789,
    healthPlanCardId: 'xyz789',
    holderHealthPlanCardId: 'uvw987',
    beneficiaryTypeId: 2,
    name: 'Maria',
    cpf: '987.654.321-00',
    birthDate: new Date('1985-05-05'),
    healthPlanId: 123,
    statusId: 2,
    gender: 'F',
    holderCpf: '123.456.789-00',
    createdAt: new Date('2023-06-22T14:15:38.359Z'),
  },
  {
    id: 'f4c2ed24-9e2f-4ff0-bd20-6a0e974b0bc4',
    companyId: 456,
    healthPlanCardId: 'pqr456',
    holderHealthPlanCardId: 'jkl321',
    beneficiaryTypeId: 1,
    name: 'Pedro',
    cpf: '555.444.333-22',
    birthDate: new Date('1995-10-10'),
    statusId: 1,
    gender: 'M',
    holderCpf: '555.444.333-22',
    createdAt: new Date('2023-06-22T14:15:38.359Z'),
  },
];

export const beneficiariesByCompanyAndCpfsMock = [
  {
    id: '123e4567-e89b-12d3-a456-426655440001',
    companyId: 789,
    healthPlanCardId: 'xyz789',
    holderHealthPlanCardId: 'uvw987',
    beneficiaryTypeId: 1,
    name: 'Ana',
    cpf: '111.222.333-44',
    birthDate: new Date('1992-08-15'),
    healthPlanId: 789,
    statusId: 1,
    gender: 'F',
    holderCpf: '999.888.777-66',
    createdAt: new Date('2023-06-22T15:30:00.000Z'),
  },
  {
    id: '987e6543-21d9-34c2-b765-098776655433',
    companyId: 789,
    healthPlanCardId: 'pqr456',
    holderHealthPlanCardId: 'jkl321',
    beneficiaryTypeId: 2,
    name: 'Carlos',
    cpf: '444.555.666-77',
    birthDate: new Date('1980-03-20'),
    healthPlanId: 123,
    statusId: 2,
    gender: 'M',
    holderCpf: '222.333.444-55',
    createdAt: new Date('2023-06-22T16:45:00.000Z'),
  },
  {
    id: '654d321e-98b7-67c8-45a4-123321123321',
    companyId: 789,
    healthPlanCardId: 'abc123',
    holderHealthPlanCardId: 'def456',
    beneficiaryTypeId: 1,
    name: 'Mariana',
    cpf: '999.888.777-66',
    birthDate: new Date('1988-12-10'),
    healthPlanId: 789,
    statusId: 1,
    gender: 'F',
    holderCpf: '111.222.333-44',
    createdAt: new Date('2023-06-22T17:15:00.000Z'),
  },
  {
    id: 'abcd1234-ef56-7890-1234-567890abcd12',
    companyId: 789,
    healthPlanCardId: 'uvw789',
    holderHealthPlanCardId: 'xyz987',
    beneficiaryTypeId: 2,
    name: 'Lucas',
    cpf: '777.888.999-00',
    birthDate: new Date('1997-06-05'),
    healthPlanId: 456,
    statusId: 2,
    gender: 'M',
    holderCpf: '333.444.555-66',
    createdAt: new Date('2023-06-22T18:30:00.000Z'),
  }
];

export const beneficiariesByCompanyAndHolderCpfsAndAcceptedTermsMock = [
  {
    id: '11111111-2222-3333-4444-555555555555',
    companyId: 456,
    healthPlanCardId: 'xyz789',
    holderHealthPlanCardId: 'uvw987',
    beneficiaryTypeId: 1,
    name: 'Camila',
    cpf: '111.222.333-44',
    birthDate: new Date('1992-08-15'),
    healthPlanId: 789,
    statusId: 1,
    gender: 'F',
    holderCpf: '999.888.777-66',
    createdAt: new Date('2023-06-22T15:30:00.000Z'),
    acceptedTerms: new Date('2023-06-01'),
  },
  {
    id: '22222222-3333-4444-5555-666666666666',
    companyId: 456,
    healthPlanCardId: 'pqr456',
    holderHealthPlanCardId: 'jkl321',
    beneficiaryTypeId: 2,
    name: 'Rafael',
    cpf: '444.555.666-77',
    birthDate: new Date('1980-03-20'),
    healthPlanId: 123,
    statusId: 2,
    gender: 'M',
    holderCpf: '222.333.444-55',
    createdAt: new Date('2023-06-22T16:45:00.000Z'),
    acceptedTerms: new Date('2023-05-15'),
  },
  {
    id: '33333333-4444-5555-6666-777777777777',
    companyId: 456,
    healthPlanCardId: 'abc123',
    holderHealthPlanCardId: 'def456',
    beneficiaryTypeId: 1,
    name: 'Juliana',
    cpf: '999.888.777-66',
    birthDate: new Date('1988-12-10'),
    healthPlanId: 789,
    statusId: 1,
    gender: 'F',
    holderCpf: '111.222.333-44',
    createdAt: new Date('2023-06-22T17:15:00.000Z'),
    acceptedTerms: new Date('2023-06-10'),
  },
  {
    id: '44444444-5555-6666-7777-888888888888',
    companyId: 456,
    healthPlanCardId: 'uvw789',
    holderHealthPlanCardId: 'xyz987',
    beneficiaryTypeId: 2,
    name: 'Pedro',
    cpf: '777.888.999-00',
    birthDate: new Date('1997-06-05'),
    healthPlanId: 456,
    statusId: 2,
    gender: 'M',
    holderCpf: '333.444.555-66',
    createdAt: new Date('2023-06-22T18:30:00.000Z'),
    acceptedTerms: new Date('2023-06-20'),
  }
];

export const beneficiariesToActivateMock: {
  parsed: IRowWithoutError;
  created: IBeneficiaryToCreate;
}[] = [
  {
    parsed: {
      processedRow: {
        beneficiaryType: 'DEPENDENTE',
        planCode: '123',
        planName: 'Plano 1',
        cardNumber: '1234',
        holderCardNumber: '5678',
        cpf: '111.222.333-44',
        fullName: 'Jo達o Silva',
        dateOfBirth: '2007/01/02',
        gender: 'Masculino',
        email: 'Jo達o@example.com',
        cpfHolder: '999.888.777-66',
      },
      number: 1,
      raw: 'raw mock',
    },
    created: {
      id: '1',
      companyId: 456,
      healthPlanCardId: 'abc4321',
      holderHealthPlanCardId: 'acb567',
      beneficiaryTypeId: 123,
      name: 'Jo達o Silva',
      cpf: '111.222.333-44',
      birthDate: new Date('2007/01/02'),
      healthPlanId: 125,
      statusId: 1,
      gender: 'Masculino',
      holderCpf: '1234.272.31-41',
      createdAt: new Date('2023-06-22T15:30:00.000Z'),
    },
  },
  {
    parsed: {
      processedRow: {
        beneficiaryType: 'DEPENDENTE',
        planCode: '456',
        planName: 'Plano 2',
        cardNumber: '5678',
        holderCardNumber: '9012',
        cpf: '444.555.666-77',
        fullName: 'Ana Oliveira',
        dateOfBirth: '2008-05-15',
        gender: 'Feminino',
        email: 'ana@example.com',
        cpfHolder: '999.555.777-33',
      },
      number: 2,
      raw: 'raw mock',
    },
    created: {
      id: '3',
      companyId: 123,
      healthPlanCardId: 'ghi6543',
      holderHealthPlanCardId: 'def321',
      beneficiaryTypeId: 789,
      name: 'Ana Oliveira',
      cpf: '444.555.666-77',
      birthDate: new Date('2008-05-15'),
      healthPlanId: 767,
      statusId: 1,
      gender: 'Feminino',
      holderCpf: '9012.131.41-51',
      createdAt: new Date('2023-06-22T17:30:00.000Z'),
    },
  },
  {
    parsed: {
      processedRow: {
        beneficiaryType: 'DEPENDENTE',
        planCode: '456',
        planName: 'Plano 2',
        cardNumber: '5678',
        holderCardNumber: '9012',
        cpf: '444.555.666-77',
        fullName: 'Pedro Santos',
        dateOfBirth: '1992-11-25',
        gender: 'Masculino',
        email: 'pedro@example.com',
        cpfHolder: '999.888.777-66',
      },
      number: 3,
      raw: 'raw mock',
    },
    created: {
      id: '4',
      companyId: 123,
      healthPlanCardId: 'jkl9876',
      holderHealthPlanCardId: 'ghi543',
      beneficiaryTypeId: 12,
      name: 'Pedro Santos',
      cpf: '444.555.666-77',
      birthDate: new Date('1992-11-25'),
      healthPlanId: 1300,
      statusId: 1,
      gender: 'Masculino',
      holderCpf: '9012.131.41-51',
      createdAt: new Date('2023-06-22T18:15:00.000Z'),
    },
  },
];

export const primaryBeneficiariesWithAcceptedTermsMock = [ ...beneficiariesByCompanyAndHolderCpfsAndAcceptedTermsMock ];